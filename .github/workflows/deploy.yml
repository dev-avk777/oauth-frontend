name: Deploy to GitLab Registry

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint check
        run: pnpm lint

      - name: Create env file
        run: |
          echo "VITE_GOOGLE_CLIENT_ID=${{ secrets.VITE_GOOGLE_CLIENT_ID }}" > .env.production
          echo "VITE_AUTH_API_URL=${{ secrets.VITE_AUTH_API_URL }}" >> .env.production
          echo "VITE_FRONTEND_URL=${{ secrets.VITE_FRONTEND_URL }}" >> .env.production

      - name: Build application
        run: pnpm build:prod
        env:
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
          VITE_AUTH_API_URL: ${{ secrets.VITE_AUTH_API_URL }}
          VITE_FRONTEND_URL: ${{ secrets.VITE_FRONTEND_URL }}
          VITE_SUBSTRATE_WS:     ${{ secrets.VITE_SUBSTRATE_WS }}

      - name: Build Docker image
        run: docker build -t oauth-frontend:latest .

      - name: Tag image for GitLab Registry
        run: |
          docker tag oauth-frontend:latest registry.gitlab.com/store_images/docker-images/oauth-frontend:latest
          docker tag oauth-frontend:latest registry.gitlab.com/store_images/docker-images/oauth-frontend:${{ github.sha }}

      - name: Login to GitLab Registry on runner
        uses: docker/login-action@v3
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USER }}
          password: ${{ secrets.GITLAB_TOKEN }}

      - name: Push image to GitLab Registry
        run: |
          docker push registry.gitlab.com/store_images/docker-images/oauth-frontend:latest
          docker push registry.gitlab.com/store_images/docker-images/oauth-frontend:${{ github.sha }}

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || '22' }}
          script: |
            docker login -u ${{ secrets.GITLAB_USER }} -p ${{ secrets.GITLAB_TOKEN }} registry.gitlab.com

            cd /home/dr_sgs/frontend-oauth-frontend
            echo "VITE_GOOGLE_CLIENT_ID=${{ secrets.VITE_GOOGLE_CLIENT_ID }}" > .env.production
            echo "VITE_AUTH_API_URL=${{ secrets.VITE_AUTH_API_URL }}" >> .env.production
            echo "VITE_FRONTEND_URL=${{ secrets.VITE_FRONTEND_URL }}" >> .env.production

            docker-compose -f docker-compose.frontend-oauth-frontend.yml pull oauth-frontend
            docker-compose -f docker-compose.frontend-oauth-frontend.yml up -d oauth-frontend

            docker exec nginx nginx -s reload
